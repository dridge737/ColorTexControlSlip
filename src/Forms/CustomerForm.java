/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Handlers.CustomerHandler;
import DataEntities.Customer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;
/**
 *
 * @author Eldridge
 */
public class CustomerForm extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    Customer thisCustomer = new Customer();
    /**
     * Creates new Customer Form
     */
    public CustomerForm() {
        initComponents();
        this.set_to_center();
        this.GetUpdatedTable();
        
    }

    public void set_to_center()
    {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x,y);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        CustomerText = new javax.swing.JTextField();
        EditButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Color Text Control Slip");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(null);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 30)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Customer");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 20, 360, 40);

        DeleteButton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteButton);
        DeleteButton.setBounds(212, 390, 100, 50);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Customer List ");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 80, 400, 40);

        AddButton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        AddButton.setText("Add");
        AddButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddButton);
        AddButton.setBounds(7, 390, 100, 50);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jPanel2.setOpaque(false);

        CustomerTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        CustomerTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CustomerTable.setRowHeight(20);
        CustomerTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(CustomerTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 117, 400, 200);

        CustomerText.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        CustomerText.setForeground(new java.awt.Color(204, 204, 204));
        CustomerText.setText("Name :");
        CustomerText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CustomerTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CustomerTextFocusLost(evt);
            }
        });
        CustomerText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CustomerTextKeyReleased(evt);
            }
        });
        jPanel1.add(CustomerText);
        CustomerText.setBounds(10, 330, 400, 30);

        EditButton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        EditButton.setText("Edit");
        EditButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });
        jPanel1.add(EditButton);
        EditButton.setBounds(110, 390, 100, 50);

        CloseButton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        CloseButton.setText("Close");
        CloseButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CloseButton);
        CloseButton.setBounds(315, 390, 100, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
       if(CustomerText.getText().length()>0 && !CustomerText.getText().equals("Name :"))
        {
           thisCustomer.setCustomerName(this.CustomerText.getText());
            CustomerHandler thisCustomerHandler = new CustomerHandler();
           
            if(AddButton.getText().equals("Save"))
            {
               if(thisCustomer.getCustomerId() != -1)
               {
                   thisCustomerHandler.UpdateCustomer(thisCustomer);
                   
                   thisCustomer.setCustomerName("");
                   thisCustomer.setCustomerId(-1);
                   this.DeleteButton.setEnabled(true);
                   this.EditButton.setText("Edit");
                   AddButton.setText("Add");
               }
            }
            else
            {
                if(thisCustomerHandler.AddNewCustomer(thisCustomer)){
                    JOptionPane.showMessageDialog(null, "Successfully added Customer : "+CustomerText.getText());
                    this.dispose();
                }
                else if(CustomerText.getText() == "Name :")
                {
                    JOptionPane.showMessageDialog(null, "Please input a text.");
                }
                else
                    JOptionPane.showMessageDialog(null, "Customer with the same name has already been added.");
            }
            
            this.GetUpdatedTable();
            this.ResetCustomerText();
        }
        else
        JOptionPane.showMessageDialog(null, "Please add a character/letter to the name");
        
    }//GEN-LAST:event_AddButtonActionPerformed

    public void ResetCustomerText()
    {
        this.CustomerText.setText("Name :");
        CustomerText.setForeground(new Color(204,204,204));
        this.UpdateRowFilter("");
    }
    
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:

        if(CustomerTable.getSelectedRowCount() > 0 )
        {
            int CloseorNoreply = JOptionPane.showConfirmDialog(null,"Delete this Customer? "
                  ,"Delete Customer?", JOptionPane.YES_NO_OPTION);
            if(CloseorNoreply == JOptionPane.YES_OPTION)
            {
                setCustomerDetails();
                new CustomerHandler().DeleteCustomer(thisCustomer.getCustomerId());
                this.GetUpdatedTable();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select an Item in the table to be edited");
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void setCustomerDetails()
    {
        int convertedRow = CustomerTable.convertRowIndexToModel(this.CustomerTable.getSelectedRow());
        String CustomerName = this.CustomerTable.getModel().getValueAt(convertedRow, 0).toString();
        thisCustomer.setCustomerName(CustomerName);
        thisCustomer.setCustomerId(new CustomerHandler().GetCustomerIDFromCustomerName(CustomerName));
        model.removeRow(convertedRow); 
    }
    
    private void GetUpdatedTable()
    {
        model = getUpdatedCustomerTableModel();
        this.CustomerTable.setModel(model);
    }
    
    private void UpdateRowFilter(String row_filter_text)
    {
        TableRowSorter<TableModel> rowSorter
            = new TableRowSorter<>(this.CustomerTable.getModel());
        
        this.CustomerTable.setRowSorter(rowSorter);
        
        if (row_filter_text.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + row_filter_text));        
        }
    }
    
    private void CustomerTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomerTextKeyReleased
        // TODO add your handling code here:
        UpdateRowFilter(this.CustomerText.getText());
    }//GEN-LAST:event_CustomerTextKeyReleased

    private void CustomerTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CustomerTextFocusGained
        // TODO add your handling code here:
        if(CustomerText.getText().equals("Name :"))
        {
            CustomerText.setText("");
            CustomerText.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_CustomerTextFocusGained

    private void CustomerTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CustomerTextFocusLost
        // TODO add your handling code here:
        if(CustomerText.getText().equals(""))
            this.ResetCustomerText();
    }//GEN-LAST:event_CustomerTextFocusLost

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:

        if(EditButton.getText().equals("Edit"))
        {
            if(CustomerTable.getSelectedRowCount() > 0 )
            {
                CustomerText.setForeground(Color.BLACK);
                setCustomerDetails();
                CustomerText.setText(thisCustomer.getCustomerName());
                this.EditButton.setText("Cancel");
                this.AddButton.setText("Save");
                this.DeleteButton.setEnabled(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please select an item in the table to be edited");
            }
        }
            else
            {
                model.addRow(new String[]{thisCustomer.getCustomerName()});
                thisCustomer.setCustomerName("");
                EditButton.setText("Edit");
                this.AddButton.setText("Add");
                this.DeleteButton.setEnabled(true);
                this.ResetCustomerText();
            }
        
    }//GEN-LAST:event_EditButtonActionPerformed

    
    
    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        // TODO add your handling code here:
            this.dispose();
    }//GEN-LAST:event_CloseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerForm().setVisible(true);
            }
        });
    }
    
    public DefaultTableModel getUpdatedCustomerTableModel() {      
        
        DefaultTableModel model_original = new DefaultTableModel();
        //model_original.addColumn("Customer Name");
        //DefaultTableColumnModel column_model = new DefaultTableColumnModel();
        //column_model.
        //TableColumn thisColumn = new TableColumn();
        //thisColumn.setCellEditor(null);
        //thisColumn.setHeaderValue("Customer Name");
       
        ArrayList<String> CustomerList = new CustomerHandler().GetAllCustomers();
        model_original.addColumn("Customer Name");
        for(int x=0; x<CustomerList.size(); x++)
        {
            model_original.addRow(new Object[]{CustomerList.get(x).toString()});
        }
        
        return model_original;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton CloseButton;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JTextField CustomerText;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
